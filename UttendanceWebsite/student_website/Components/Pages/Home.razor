@page "/"
@rendermode InteractiveServer

@* Written by Judy Yang for CS 4485.0w1, CS Project, starting April 4, 2025
    parisa wrote some
    NetID: JXY200013
*@

@inject NavigationManager navigateManager
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@using student_website.Models
@using student_website.Services
@using Microsoft.EntityFrameworkCore
@using System.ComponentModel.DataAnnotations

<PageTitle>Student Login</PageTitle>
<div class="panel">
    <img src="icon.png" width="100" height="100">
    <h1>Welcome to UTtenDance</h1>
    <span>Student Login</span>

    <div class="input-section">
        <EditForm Model="student" OnValidSubmit="SignIn">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="utdid">UTD-ID</label>
                <InputNumber id="utdid" @bind-Value="student.UTDID" class="form-control" />
            </div>

            <div class="form-group">
                <label for="snetid">NetID</label>
                <InputText id="snetid" @bind-Value="student.SNetID" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                @(isLoading ? "Logging In..." : "Login")
            </button>
        </EditForm>

        <div class="popup mt-2">
            <span>What is a UTD-ID?</span>
        </div>
    </div>
</div>

@code {
    private Student student = new Student();
    private string errorMessage = "";
    private bool isLoading = false;

    private async Task SignIn()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            using var db = DbContextFactory.CreateDbContext();

            var validStudent = await db.Student
                .AsNoTracking()
                .FirstOrDefaultAsync(s => s.UTDID == student.UTDID && s.SNetID == student.SNetID);

            if (validStudent != null)
            {
                navigateManager.NavigateTo("/quiz");
            }
            else
            {
                errorMessage = "Invalid UTD-ID or NetID.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            student.UTDID = 0;
            student.SNetID = string.Empty;
            StateHasChanged();
        }
    }
}